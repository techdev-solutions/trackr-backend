apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'eclipse-wtp'
apply plugin: 'sonar-runner'

sourceCompatibility = 1.8
version = '1.0'
project.ext {
    springVersion = '4.1.1.RELEASE'
    springSecurityVersion = '3.2.3.RELEASE'
}
compileJava.options.encoding = 'UTF-8'
eclipse.classpath.downloadJavadoc = true 

repositories {
    mavenCentral()
    maven {
        url 'http://repo.springsource.org/libs-milestone/'
    }
}

war {
    if(hasProperty("teamcity")) {
        archiveName "trackr-" + version + "_" + teamcity["build.number"] + ".war"
    } else {
        archiveName "trackr-" + version + "_0.war"
    }
    from("src/main/database") {
        into "flyway"
    }
}

sonarRunner {
    sonarProperties {
        property "sonar.projectKey", "a5e626097d2cedbf"
        property "sonar.projectName", "trackr"
        property "sonar.host.url", "http://localhost:8112"
        property "sonar.jdbc.url", "jdbc:postgresql://localhost:5432/sonar"
        property "sonar.jdbc.driverClassName", "org.postgresql.Driver"
        property "sonar.jdbc.username", "sonar"
        property "sonar.sourceEncoding", "UTF-8"
    }
}

dependencies {
    compile "org.springframework:spring-context:$project.springVersion"
    compile "org.springframework.integration:spring-integration-core:4.0.2.RELEASE"
    compile "org.springframework.integration:spring-integration-mail:4.0.2.RELEASE"

    //web
    compile "org.springframework:spring-webmvc:$project.springVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:2.3.1"
    compile "org.codehaus.jackson:jackson-core-asl:1.9.13"
    compile "javax.servlet:jstl:1.2"
    compile "org.springframework.data:spring-data-rest-webmvc:2.1.0.RELEASE"
    compile "org.webjars:bootstrap:3.1.1"

    compile "javax.validation:validation-api:1.0.0.GA"
    compile "ch.qos.logback:logback-classic:1.0.13"
    compile "org.projectlombok:lombok:1.12.4"
    compile "org.glassfish:javax.json:1.0"

    //email
    compile "javax.mail:mail:1.4.7"
    compile "jaf:activation:1.0.2"
    compile "org.springframework:spring-context-support:$project.springVersion"

    //security
    compile "org.springframework.security:spring-security-openid:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$project.springSecurityVersion"
    compile "org.springframework.security:spring-security-aspects:$project.springSecurityVersion"
    compile "org.springframework.security.oauth:spring-security-oauth2:2.0.1.RELEASE"
    compile "org.springframework.security:spring-security-taglibs:$project.springSecurityVersion"

    //utils
    compile "commons-io:commons-io:2.4"

    //database
    compile "commons-dbcp:commons-dbcp:1.4"
    compile "com.h2database:h2:1.3.170"
    compile "postgresql:postgresql:9.1-901.jdbc4"
    compile "org.springframework.data:spring-data-jpa:1.6.0.RELEASE"
    compile "org.springframework:spring-orm:$project.springVersion"
    compile "org.hibernate:hibernate-entitymanager:4.1.8.Final"
    compile "org.hibernate:hibernate-validator:4.3.1.Final"
    //needed because java 8 compability
    compile "org.javassist:javassist:3.18.1-GA"

    //pdf
    compile("org.xhtmlrenderer:flying-saucer-pdf-itext5:9.0.6")
    compile("org.thymeleaf:thymeleaf:2.1.3.RELEASE")

    //tomcat
    providedCompile "javax.servlet:javax.servlet-api:3.0.1"

    testCompile "org.springframework:spring-test:$project.springVersion"
    testCompile group: "junit", name: "junit", version: "4.11"
    testCompile("org.echocat.jomon:testing:1.4.3") {
        exclude group: "org.mockito"
    }
    testCompile "org.mockito:mockito-core:1.9.5"
    testCompile "com.jayway.jsonpath:json-path:0.9.1"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}